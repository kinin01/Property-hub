# Generated by Django 5.2 on 2025-05-17 12:35

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('property', '__first__'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Tenant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lease_start_date', models.DateField(blank=True, null=True, verbose_name='lease start date')),
                ('lease_end_date', models.DateField(blank=True, null=True, verbose_name='lease end date')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('unit', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tenants', to='property.unit')),
                ('user', models.OneToOneField(limit_choices_to={'role': 'tenant'}, on_delete=django.db.models.deletion.CASCADE, related_name='tenant_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'tenant',
                'verbose_name_plural': 'tenants',
            },
        ),
        migrations.CreateModel(
            name='Visitor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('visitor_name', models.CharField(max_length=255, verbose_name='visitor name')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='email address')),
                ('tenant', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='visitors', to='tenant.tenant', verbose_name='tenant')),
                ('unit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='visitors', to='property.unit', verbose_name='unit')),
            ],
            options={
                'verbose_name': 'visitor',
                'verbose_name_plural': 'visitors',
            },
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount_due', models.DecimalField(decimal_places=2, help_text='Total amount due for the billing period', max_digits=10, verbose_name='amount due')),
                ('amount_paid', models.DecimalField(decimal_places=2, default=0.0, help_text='Amount paid by the tenant', max_digits=10, verbose_name='amount paid')),
                ('payment_method', models.CharField(choices=[('CASH', 'Cash'), ('MPESA', 'M-Pesa'), ('CARD', 'Card')], default='CASH', max_length=10, verbose_name='payment method')),
                ('payment_status', models.CharField(choices=[('PENDING', 'Pending'), ('COMPLETED', 'Completed'), ('FAILED', 'Failed')], default='PENDING', max_length=10, verbose_name='payment status')),
                ('transaction_id', models.CharField(blank=True, help_text='Transaction ID from payment provider, e.g., M-Pesa code', max_length=100, null=True, verbose_name='transaction ID')),
                ('billing_period', models.CharField(help_text='Billing period in YYYY-MM format, e.g., 2025-05', max_length=7, validators=[django.core.validators.RegexValidator(message='Billing period must be in YYYY-MM format', regex='^\\d{4}-\\d{2}$')], verbose_name='billing period')),
                ('payment_date', models.DateTimeField(blank=True, help_text='Date of payment completion', null=True, verbose_name='payment date')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('unit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payments', to='property.unit', verbose_name='unit')),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payments', to='tenant.tenant', verbose_name='tenant')),
            ],
            options={
                'verbose_name': 'payment',
                'verbose_name_plural': 'payments',
                'indexes': [models.Index(fields=['tenant', 'billing_period'], name='tenant_paym_tenant__691167_idx'), models.Index(fields=['unit', 'billing_period'], name='tenant_paym_unit_id_24fa1e_idx'), models.Index(fields=['payment_status'], name='tenant_paym_payment_812c45_idx')],
                'constraints': [models.CheckConstraint(condition=models.Q(('amount_due__gte', 0)), name='amount_due_non_negative'), models.CheckConstraint(condition=models.Q(('amount_paid__gte', 0)), name='amount_paid_non_negative')],
            },
        ),
    ]
